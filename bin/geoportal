#!/usr/bin/env node

require('shelljs/global');
require('colors');
var program = require('commander');
var util = require('../lib/util');
var fs = require('fs');

program.version(getVersion());

// Get version of geoportal-cli and geoportal.
function getVersion() {
  var pkginfo = require('pkginfo')(module, 'version');
  var cwd = process.cwd();

  var output = 'geoportal-cli: v' + module.exports.version + '\n';
  var geopPath = cwd + '/node_modules/geoportal/';

  // Append message for geoportal.
  if (fs.existsSync(geopPath)) {
    var package = require(geopPath + 'package.json');

    output += 'geoportal v' + package.version + ' is installed in this project.';
  } else {
    var request = require('sync-request');
    var response = request('GET', 'https://raw.githubusercontent.com/esri-dap/geoportal-boilerplate/master/package.json');

    if (response.statusCode == 200) {
      var packageJSON = JSON.parse(response.body);

      output += 'geoportal ' + packageJSON.dependencies.geoportal + ' will be installed with a new project, according to the dependencies of geoportal-boilerplate.';
    } else {
      var execSync = require('child_process').execSync;
      var geopVersion = execSync('npm view geoportal version').toString();

      output += 'geoportal v' + geopVersion.trim() + ' (latest) will be installed with a new project, unless the boilerplate project\'s dependencies specify otherwise.';
    }
  }

  return output;
}

util.checkDependencies();

var createCmd   = require('../lib/commands/create')(program);
var createWidgetCmd = require('../lib/commands/create-widget')(program);
var createPieceCmd = require('../lib/commands/create-piece')(program);
var createModuleCmd = require('../lib/commands/create-module')(program);
var geopCmd     = require('../lib/geoportal')(program);

program.on('--help', function() {
  geopCmd.help();
});

program.parse(process.argv);

if (process.argv.length <= 2) {
  // This means user passed no args, so display help
  // Needs to come after parse, or command name won't register in help text
  program.help();
}
